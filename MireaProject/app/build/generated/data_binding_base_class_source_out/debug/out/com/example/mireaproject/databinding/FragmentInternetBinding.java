// Generated by view binder compiler. Do not edit!
package com.example.mireaproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.mireaproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInternetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAPICall;

  @NonNull
  public final TextView labelForcast;

  @NonNull
  public final TextView labelHumidity;

  @NonNull
  public final TextView labelPressure;

  @NonNull
  public final TextView labelTemperature;

  @NonNull
  public final TextView labelTime;

  @NonNull
  public final TextView labelWind;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView valueForecast;

  @NonNull
  public final TextView valueHumidity;

  @NonNull
  public final TextView valuePressure;

  @NonNull
  public final TextView valueTemperature;

  @NonNull
  public final TextView valueTime;

  @NonNull
  public final TextView valueWind;

  private FragmentInternetBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAPICall,
      @NonNull TextView labelForcast, @NonNull TextView labelHumidity,
      @NonNull TextView labelPressure, @NonNull TextView labelTemperature,
      @NonNull TextView labelTime, @NonNull TextView labelWind, @NonNull LinearLayout linearLayout,
      @NonNull TextView valueForecast, @NonNull TextView valueHumidity,
      @NonNull TextView valuePressure, @NonNull TextView valueTemperature,
      @NonNull TextView valueTime, @NonNull TextView valueWind) {
    this.rootView = rootView;
    this.buttonAPICall = buttonAPICall;
    this.labelForcast = labelForcast;
    this.labelHumidity = labelHumidity;
    this.labelPressure = labelPressure;
    this.labelTemperature = labelTemperature;
    this.labelTime = labelTime;
    this.labelWind = labelWind;
    this.linearLayout = linearLayout;
    this.valueForecast = valueForecast;
    this.valueHumidity = valueHumidity;
    this.valuePressure = valuePressure;
    this.valueTemperature = valueTemperature;
    this.valueTime = valueTime;
    this.valueWind = valueWind;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInternetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInternetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_internet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInternetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAPICall;
      Button buttonAPICall = rootView.findViewById(id);
      if (buttonAPICall == null) {
        break missingId;
      }

      id = R.id.labelForcast;
      TextView labelForcast = rootView.findViewById(id);
      if (labelForcast == null) {
        break missingId;
      }

      id = R.id.labelHumidity;
      TextView labelHumidity = rootView.findViewById(id);
      if (labelHumidity == null) {
        break missingId;
      }

      id = R.id.labelPressure;
      TextView labelPressure = rootView.findViewById(id);
      if (labelPressure == null) {
        break missingId;
      }

      id = R.id.labelTemperature;
      TextView labelTemperature = rootView.findViewById(id);
      if (labelTemperature == null) {
        break missingId;
      }

      id = R.id.labelTime;
      TextView labelTime = rootView.findViewById(id);
      if (labelTime == null) {
        break missingId;
      }

      id = R.id.labelWind;
      TextView labelWind = rootView.findViewById(id);
      if (labelWind == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.valueForecast;
      TextView valueForecast = rootView.findViewById(id);
      if (valueForecast == null) {
        break missingId;
      }

      id = R.id.valueHumidity;
      TextView valueHumidity = rootView.findViewById(id);
      if (valueHumidity == null) {
        break missingId;
      }

      id = R.id.valuePressure;
      TextView valuePressure = rootView.findViewById(id);
      if (valuePressure == null) {
        break missingId;
      }

      id = R.id.valueTemperature;
      TextView valueTemperature = rootView.findViewById(id);
      if (valueTemperature == null) {
        break missingId;
      }

      id = R.id.valueTime;
      TextView valueTime = rootView.findViewById(id);
      if (valueTime == null) {
        break missingId;
      }

      id = R.id.valueWind;
      TextView valueWind = rootView.findViewById(id);
      if (valueWind == null) {
        break missingId;
      }

      return new FragmentInternetBinding((ConstraintLayout) rootView, buttonAPICall, labelForcast,
          labelHumidity, labelPressure, labelTemperature, labelTime, labelWind, linearLayout,
          valueForecast, valueHumidity, valuePressure, valueTemperature, valueTime, valueWind);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
